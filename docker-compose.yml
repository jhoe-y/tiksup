services:
  zookeeper:
    image: mcjesus/zookeeper:alpine1.0

  kafka:
    image: mcjesus/kafka:alpine1.0
    environment:
      - ZOOKEEPER_SERVER=zookeeper
      - KAFKA_BROKER_ID=1
      - KAFKA_ADVERTISED_LISTENER=localhost
    ports:
      - "9092:9092"
    command: >
      /kafka_2.13-3.8.0/bin/kafka-topics.sh --create --bootstrap-server kafka --topic tiksup-user-data

  redis:
    image: redis:7.4.0-alpine
    ports:
      - "6379:6379"

  mongo:
    image: mongo:8.0.1-rc0-noble
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
    ports:
      - "27017:27017"

  mongo-builder:
    image: mongo:8.0.1-rc0-noble
    volumes:
      - ./movies.json:/app/movies.json:ro
    command: >
      mongoimport -u ${MONGO_USER} -p ${MONGO_PASSWORD} --authenticationDatabase admin --host mongo --db ${MONGO_DB} --collection ${MONGO_COLLECTION} --type json --file /app/movies.json --jsonArray
    restart: "no"

  postgres:
    image: postgres:17-alpine3.20
    environment:
      - POSTGRES_USER=${PG_USER}
      - POSTGRES_PASSWORD=${PG_PASSWORD}
      - POSTGRES_DB=${PG_NAME}
    ports:
      - "5432:5432"

  spark-master:
    image: bitnami/spark:latest
    environment:
      - SPARK_MODE=master
    ports:
      - "7077:7077"
      - "8080:8080"

  spark-worker:
    image: bitnami/spark:latest
    depends_on:
      - spark-master
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077

  processor:
    build: ./processor
    depends_on:
      - spark-master
      - spark-worker
      - redis
    environment:
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - SPARK_HOST=${SPARK_HOST}
      - SPARK_PORT=${SPARK_PORT}
    restart: always
    ports:
      - "8000:8000"

  worker:
    build: ./worker
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - PORT=${WORKER_PORT}
      - PROCESSOR_URL=${PROCESSOR_URL}
      - PG_HOST=${PG_HOST}
      - PG_PORT=${PG_PORT}
      - PG_NAME=${PG_NAME}
      - PG_USER=${PG_USER}
      - PG_PASSWORD=${PG_PASSWORD}
      - KAFKA_SERVER=${KAFKA_SERVER}
      - KAFKA_TOPIC=${KAFKA_TOPIC}
      - MONGO_HOST=${MONGO_HOST}
      - MONGO_PORT=${MONGO_PORT}
      - MONGO_USER=${MONGO_USER}
      - MONGO_PASSWORD=${MONGO_PASSWORD}
      - MONGO_DB=${MONGO_DB}
      - MONGO_COLLECTION=${MONGO_COLLECTION}
    depends_on:
      - mongo
      - postgres
    restart: always
    ports:
      - "${WORKER_PORT}:${WORKER_PORT}"

  gateway:
    build: ./gateway
    depends_on:
      - redis
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - PORT=${GATEWAY_PORT}
      - KAFKA_SERVER=${KAFKA_SERVER}
      - KAFKA_TOPIC=${KAFKA_TOPIC}
      - WORKER_URL=${WORKER_URL}
      - GRPC_HOST=${GRPC_HOST}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
    restart: always
    ports:
      - "${GATEWAY_PORT}:${GATEWAY_PORT}"

  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    environment:
      - PORT=${CLIENT_PORT}
      - GATEWAY_URL=${GATEWAY_URL}
    depends_on:
      - gateway
    restart: always
    ports:
      - "${CLIENT_PORT}:${CLIENT_PORT}"
